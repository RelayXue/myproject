package com.gh.dao;

import com.gh.entity.BuStay;
import com.gh.entity.Integrateddata;
import com.gh.entity.IntegrateddataExample;
import com.gh.entity.IntegrateddataWithBLOBs;
import com.gh.entity.ObImages;

import java.util.List;

import org.apache.commons.lang.StringUtils;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

public class IntegrateddataDAOImpl extends SqlMapClientDaoSupport implements IntegrateddataDAO {

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table integrateddata
     *
     * @abatorgenerated Fri Dec 19 17:07:43 CST 2014
     */
    public IntegrateddataDAOImpl() {
        super();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table integrateddata
     *
     * @abatorgenerated Fri Dec 19 17:07:43 CST 2014
     */
    public void insert(IntegrateddataWithBLOBs record) {
        getSqlMapClientTemplate().insert("integrateddata.abatorgenerated_insert", record);
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table integrateddata
     *
     * @abatorgenerated Fri Dec 19 17:07:43 CST 2014
     */
    public List selectByExampleWithoutBLOBs(IntegrateddataExample example) {
        List list = getSqlMapClientTemplate().queryForList("integrateddata.abatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table integrateddata
     *
     * @abatorgenerated Fri Dec 19 17:07:43 CST 2014
     */
    public List selectByExampleWithBLOBs(IntegrateddataExample example) {
        List list = getSqlMapClientTemplate().queryForList("integrateddata.abatorgenerated_selectByExampleWithBLOBs", example);
        return list;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table integrateddata
     *
     * @abatorgenerated Fri Dec 19 17:07:43 CST 2014
     */
    public int deleteByExample(IntegrateddataExample example) {
        int rows = getSqlMapClientTemplate().delete("integrateddata.abatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table integrateddata
     *
     * @abatorgenerated Fri Dec 19 17:07:43 CST 2014
     */
    public int countByExample(IntegrateddataExample example) {
        Integer count = (Integer)  getSqlMapClientTemplate().queryForObject("integrateddata.abatorgenerated_countByExample", example);
        return count.intValue();
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table integrateddata
     *
     * @abatorgenerated Fri Dec 19 17:07:43 CST 2014
     */
    public int updateByExampleSelective(IntegrateddataWithBLOBs record, IntegrateddataExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("integrateddata.abatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table integrateddata
     *
     * @abatorgenerated Fri Dec 19 17:07:43 CST 2014
     */
    public int updateByExample(IntegrateddataWithBLOBs record, IntegrateddataExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("integrateddata.abatorgenerated_updateByExampleWithBLOBs", parms);
        return rows;
    }

    /**
     * This method was generated by Abator for iBATIS.
     * This method corresponds to the database table integrateddata
     *
     * @abatorgenerated Fri Dec 19 17:07:43 CST 2014
     */
    public int updateByExample(Integrateddata record, IntegrateddataExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("integrateddata.abatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This class was generated by Abator for iBATIS.
     * This class corresponds to the database table integrateddata
     *
     * @abatorgenerated Fri Dec 19 17:07:43 CST 2014
     */
    private static class UpdateByExampleParms extends IntegrateddataExample {
        private Object record;

        public UpdateByExampleParms(Object record, IntegrateddataExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
    
	/**
	 * 综合查询信息
	 * @parm type(002018餐饮 002017住宿 002016娱乐 002015购物 002019景点) xy为查询距离时使用
	 * @return distance无距离时返回-1
	 */
	public List<IntegrateddataWithBLOBs> IntegratedQueryByPage(int pageIndex, int pageSize, String strWhere, String strOrderBy, String x, String y) {
		String mainSql = "";
		String distance = "-1";
		if(!StringUtils.isEmpty(x) && !StringUtils.isEmpty(y)){ 
			distance = "(SQRT( POW(fx-"+x+", 2) + POW(fy-"+y+", 2)) * 94690.206)";
		}
		mainSql = "select iszy,FUID,FULLNAME,FX,FY,TYPE,PHONE,ADDRESS,DIMAGES,DIMAGES_STATUS,SUPERVISOR,SUPERVISORPHONE,PRAISE,CONSUMPTION,"+distance+" as distance,INTRODUCTION,PROMISE,FEATURE,QID,STAR FROM IntegratedData ";
		if (strWhere != null && strWhere.trim().length() > 0) {
			mainSql = mainSql + " WHERE " + strWhere;
		}
		if (strOrderBy != null && strOrderBy.trim().length() > 0) {
			mainSql = mainSql + " ORDER BY " + strOrderBy;
		}
		if(pageIndex < 1) pageIndex = 1;
		mainSql+="  LIMIT "+((pageIndex-1) * pageSize)+","+pageSize;
		return (List<IntegrateddataWithBLOBs>) getSqlMapClientTemplate().queryForList("integrateddata.execSql", mainSql);
	}
	
	/**
	 * 综合查询信息
	 */
	public List<IntegrateddataWithBLOBs> SimpleIntegratedQueryByPage(int pageIndex, int pageSize, String strWhere, String strOrderBy) {
		return IntegratedQueryByPage(pageIndex, pageSize, strWhere, strOrderBy, null, null);
	}

	@Override
	public int getCount(String strWhere) {
		String sql = "SELECT COUNT(*) FROM IntegratedData";
	     if(strWhere!=null && strWhere.trim().length()>0){
	         sql = sql + " WHERE " + strWhere;
	     }
	     Object obj =  this.selectObject(sql);
	     if(obj!=null){
	         return Integer.valueOf( this.selectObject(sql).toString());
	     }
	     return 0; 
	}
	   public List<Integrateddata> execSql(String sql){
	    	return (List<Integrateddata>) getSqlMapClientTemplate().queryForList(
					"integrateddata.execSql", sql);
	    }

	
    public Object selectObject(String sql){
	     if(sql!=null && sql.trim().length()>0){
	         return getSqlMapClientTemplate().queryForObject("integrateddata.execSqlObject",sql);
	     }
	     return null;
	
   }
}